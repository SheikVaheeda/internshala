ng add @angular/material
ng generate component users
ng generate component winners
ng generate component toppers
//app.component.html:
<div>
  <mat-tab-group>
    <mat-tab label="Users">
      <app-users></app-users>
    </mat-tab>
    <mat-tab label="Winners">
      <app-winners></app-winners>
    </mat-tab>
    <mat-tab label="Toppers">
      <app-toppers></app-toppers>
    </mat-tab>
  </mat-tab-group>
</div>
//users.component.html:
<ng-container *ngIf="users">
  <table mat-table [dataSource]="users">
    <ng-container matColumnDef="name">
      <th mat-header-cell *matHeaderCellDef>Name</th>
      <td mat-cell *matCellDef="let user">{{ user.name }}</td>
    </ng-container>
    <ng-container matColumnDef="score">
      <th mat-header-cell *matHeaderCellDef>Score</th>
      <td mat-cell *matCellDef="let user">{{ user.score }}</td>
    </ng-container>
    <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>
    <tr mat-row *matRowDef="let user; columns: displayedColumns"></tr>
  </table>
</ng-container>
//users.component.ts:
import { Component, OnInit } from '@angular/core';
import { AngularFireDatabase } from '@angular/fire/database';
import { Observable } from 'rxjs';

@Component({
  selector: 'app-users',
  templateUrl: './users.component.html',
  styleUrls: ['./users.component.css']
})
export class UsersComponent implements OnInit {
  users: Observable<any[]>;
  displayedColumns = ['name', 'score'];

  constructor(private db: AngularFireDatabase) { }

  ngOnInit() {
    this.users = this.db.list('users').valueChanges();
  }
}
//winners.component.html:
<ng-container *ngIf="winners">
  <table mat-table [dataSource]="winners">
    <ng-container matColumnDef="name">
      <th mat-header-cell *matHeaderCellDef>Name</th>
      <td mat-cell *matCellDef="let winner">{{ winner.name }}</td>
    </ng-container>
    <ng-container matColumnDef="score">
      <th mat-header-cell *matHeaderCellDef>Score</th>
      <td mat-cell *matCellDef="let winner">{{ winner.score }}</td>
    </ng-container>
    <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>
    <tr mat-row *matRowDef="let winner; columns: displayedColumns"></tr>
  </table>
</ng-container>
//winners.component.ts:
import { Component, OnInit } from '@angular/core';
import { MatDialog } from '@angular/material/dialog';
import { AngularFireDatabase } from '@angular/fire/database';
import { Observable } from 'rxjs';
import { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';

@Component({
  selector: 'app-winners',
  templateUrl: './winners.component.html',
  styleUrls: ['./winners.component.css']
})
export class WinnersComponent implements OnInit {
  winners: Observable<any[]>;
  displayedColumns = ['name', 'score'];

  constructor(private db: AngularFireDatabase, private dialog: MatDialog) { }

  ngOnInit() {
    this.winners = this.db.list('winners').valueChanges();
  }

  addToWinners(user: any) {
    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {
      data: user
    });

    dialogRef.afterClosed().subscribe(result => {
      if (result === 'confirm') {
        this.db.list('winners').push(user);
      }
    });
  }
}
//confirmation-dialog.component.html:
<h2 mat-dialog-title>Confirm Adding to Winners</h2>
<mat-dialog-content>
  <p>Do you want to add {{ data.name }} (Score: {{ data.score }}) to the winners?</p>
</mat-dialog-content>
<mat-dialog-actions align="end">
  <button mat-button mat-dialog-close>Cancel</button>
  <button mat-button [mat-dialog-close]="'confirm'">Confirm</button>
</mat-dialog-actions>
//confirmation-dialog.component.ts:
import { Component, Inject } from '@angular/core';
import { MAT_DIALOG_DATA } from '@angular/material/dialog';

@Component({
  selector: 'app-confirmation-dialog',
  templateUrl: './confirmation-dialog.component.html',
  styleUrls: ['./confirmation-dialog.component.css']
})
export class ConfirmationDialogComponent {
  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }
}
//toppers.component.html:
<ng-container *ngIf="toppers">
  <ul>
    <li *ngFor="let user of toppers">
      {{ user.name }} (Score: {{ user.score }})
    </li>
  </ul>
</ng-container>
//toppers.component.ts:
import { Component, OnInit } from '@angular/core';
import { AngularFireDatabase } from '@angular/fire/database';
import { Observable } from 'rxjs';

@Component({
  selector: 'app-toppers',
  templateUrl: './toppers.component.html',
  styleUrls: ['./toppers.component.css']
})
export class ToppersComponent implements OnInit {
  toppers: any[];

  constructor(private db: AngularFireDatabase) { }

  ngOnInit() {
    this.db.list('users').valueChanges().subscribe(users => {
      this.toppers = users.filter(user => user.score > 90);
    });
  }
}
